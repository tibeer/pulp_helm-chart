apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "pulp.fullname" . }}-postgres
  labels:
    {{- include "pulp.labels" . | nindent 4 }}
spec:
  replicas: 1
  serviceName: {{ include "pulp.fullname" . }}-postgres
  selector:
    matchLabels:
      {{- include "pulp.selectorLabels" . | nindent 6 }}
      tier: postgres
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pulp.selectorLabels" . | nindent 8 }}
        tier: postgres
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - env:
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
            - name: POSTGRES_DB
              value: pulp
            - name: POSTGRES_HOST_AUTH_METHOD
              value: scram-sha-256
            - name: POSTGRES_INITDB_ARGS
              value: --auth-host=scram-sha-256
            - name: POSTGRES_PASSWORD
              value: password
            - name: POSTGRES_USER
              value: pulp
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          name: {{ .Chart.Name }}-postgres
          ports:
            - containerPort: 5432
              name: postgres
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pg-data
              subPath: ""
      hostname: {{ include "pulp.fullname" . }}-postgres
      volumes:
        - name: pg-data
          persistentVolumeClaim:
            claimName: pg-data
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: "pg-data"
        labels:
          {{ include "pulp.labels" . | nindent 10 }}
        {{- with .Values.podAnnotations }}
        annotations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      spec:
        accessModes: [{{ .Values.postgres.accessMode | default "ReadWriteOnce" | quote }}]
        {{- if .Values.postgres.storageClass }}
        {{- if (eq "-" .Values.postgres.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: "{{ .Values.postgres.storageClass }}"
        {{- end }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.postgres.storage }}
